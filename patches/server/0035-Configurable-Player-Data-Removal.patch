From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Mon, 20 Dec 2021 18:15:01 -0600
Subject: [PATCH] Configurable Player Data Removal

This allows the server operator to remove player information from the logs.

This is currently enabled by default since many anarchy server owners want this.

diff --git a/src/main/java/dev/pomf/dionysus/DionysusConfig.java b/src/main/java/dev/pomf/dionysus/DionysusConfig.java
index 38a061cdf1e4a70d074695ffa1cb5d1b502f98cf..42a8c56fa28a9883b83615b16a7ac77fdd93e2c4 100644
--- a/src/main/java/dev/pomf/dionysus/DionysusConfig.java
+++ b/src/main/java/dev/pomf/dionysus/DionysusConfig.java
@@ -207,4 +207,12 @@ public class DionysusConfig {
             Bukkit.getLogger().info("Fair natural spawns enabled, using the Spigot world mob-spawn-range for search and Bukkit spawn-limits for the count");
         }
     }
+
+    public static boolean redactPlayerData = true;
+    private static void redactPlayerData() {
+        redactPlayerData = getBoolean("redact-player-data", redactPlayerData);
+        if (redactPlayerData) {
+            Bukkit.getLogger().info("Redact player data enabled, IP Address and location data will be removed.");
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 4bf1b174b2e3f2042f23da9b4c3bb047942c4db1..42d7dff874ecac0d5760dc4f9b6c13e6f078f408 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -4,6 +4,7 @@ import com.destroystokyo.paper.profile.CraftPlayerProfile;
 import com.destroystokyo.paper.profile.PlayerProfile;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.exceptions.AuthenticationUnavailableException;
+import dev.pomf.dionysus.DionysusConfig;
 import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelFutureListener;
 import io.netty.util.concurrent.Future;
@@ -186,7 +187,11 @@ public class LoginListener implements PacketLoginInListener, ITickable {
     }
 
     public String c() {
-        return this.i != null ? this.i + " (" + this.networkManager.getSocketAddress() + ")" : String.valueOf(this.networkManager.getSocketAddress());
+        String address = this.networkManager.getSocketAddress().toString();
+        if (DionysusConfig.redactPlayerData) {
+            address = "/0.0.0.0:0";
+        }
+        return this.i != null ? this.i + " (" + address + ")" : address;
     }
 
     public void a(PacketLoginInStart packetlogininstart) {
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index feee12cc3fb9c40c8e086f48019d49beb47aeebc..25fda12b3ecca985182a1e4113401afb48688d74 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -4,6 +4,7 @@ import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
 import com.google.common.util.concurrent.Futures;
+import dev.pomf.dionysus.DionysusConfig;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
@@ -357,7 +358,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(entity.getName()))) { // Spigot
                 // CraftBukkit end
-                    PlayerConnection.LOGGER.trace("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
+                    if (DionysusConfig.redactPlayerData) {
+                        PlayerConnection.LOGGER.trace("{} (vehicle of {}) moved too quickly!", entity.getName(), this.player.getName());
+                    } else {
+                        PlayerConnection.LOGGER.trace("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), d6, d7, d8);
+                    }
                     this.networkManager.sendPacket(new PacketPlayOutVehicleMove(entity));
                     return;
                 }
@@ -605,7 +610,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(this.player.getName()))) { // Spigot
                                 // CraftBukkit end
-                                    PlayerConnection.LOGGER.trace("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
+                                    if (DionysusConfig.redactPlayerData) {
+                                        PlayerConnection.LOGGER.trace("{} moved too quickly!", this.player.getName());
+                                    } else {
+                                        PlayerConnection.LOGGER.trace("{} moved too quickly! {},{},{}", this.player.getName(), d7, d8, d9);
+                                    }
                                     this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
                                     return;
                                 }
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 3ab6b7897f5d05049287cc0388e4621aff20b54d..18db4ca5cfc2827801443efe396d2474c1d0c564 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -5,6 +5,7 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.GameProfile;
+import dev.pomf.dionysus.DionysusConfig;
 import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.net.SocketAddress;
@@ -304,7 +305,12 @@ public abstract class PlayerList {
         }
         // Paper end
         // CraftBukkit - Moved from above, added world
-        PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+        // Dionysus - anonymize logs
+        if (DionysusConfig.redactPlayerData) {
+            PlayerList.f.info(entityplayer.getName() + "[/0.0.0.0:0] logged in with entity id " + entityplayer.getId() + " at ([REDACTED] 0.0, 0.0, 0.0)");
+        } else {
+            PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+        }
     }
 
     public void sendScoreboard(ScoreboardServer scoreboardserver, EntityPlayer entityplayer) {
diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index 9188fc84d1aca420856fad5142b55cd1fd2b56f6..671e23deddc246dcfecf027b62806a18a126b16f 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 import com.google.common.collect.Lists;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
+import dev.pomf.dionysus.DionysusConfig;
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelException;
@@ -177,7 +178,11 @@ public class ServerConnection {
                                 throw new ReportedException(crashreport);
                             }
 
-                            ServerConnection.e.warn("Failed to handle packet for {}", networkmanager.getSocketAddress(), exception);
+                            String address = networkmanager.getSocketAddress().toString();
+                            if (DionysusConfig.redactPlayerData) {
+                                address = "/0.0.0.0:0";
+                            }
+                            ServerConnection.e.warn("Failed to handle packet for {}", address, exception);
                             final ChatComponentText chatcomponenttext = new ChatComponentText("Internal server error");
 
                             networkmanager.sendPacket(new PacketPlayOutKickDisconnect(chatcomponenttext), new GenericFutureListener() {
