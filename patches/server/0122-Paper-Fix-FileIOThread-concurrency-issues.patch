From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Softik Lord <dimap9986@gmail.com>
Date: Mon, 18 Jul 2022 16:35:24 +0500
Subject: [PATCH] Paper-Fix-FileIOThread-concurrency-issues

FileIOThread was using two volatile counters in order to track if
any pending work was in the queue, this causes potential concurrency
issues when this counter is updated from multiple threads, potentially
causing these counters to desync due to the unsafe volatile update

diff --git a/src/main/java/net/minecraft/server/FileIOThread.java b/src/main/java/net/minecraft/server/FileIOThread.java
index 9ee4115bec6b256362a490f7ffb3e10642d99ba2..9186836756aa888631fc65ab53eed8e31e6bbb4c 100644
--- a/src/main/java/net/minecraft/server/FileIOThread.java
+++ b/src/main/java/net/minecraft/server/FileIOThread.java
@@ -7,7 +7,7 @@ import java.util.List;
 public class FileIOThread implements Runnable {
 
     private static final FileIOThread a = new FileIOThread();
-    private final List<IAsyncChunkSaver> b = Collections.synchronizedList(Lists.newArrayList());
+    private final List<IAsyncChunkSaver> b = Collections.synchronizedList(Lists.newArrayList()); private List<IAsyncChunkSaver> getThreadedIOQueue() { return b; } // Paper - OBFHELPER
     private volatile long c;
     private volatile long d;
     private volatile boolean e;
@@ -70,7 +70,7 @@ public class FileIOThread implements Runnable {
     public void b() throws InterruptedException {
         this.e = true;
 
-        while (this.c != this.d) {
+        while(!this.getThreadedIOQueue().isEmpty()) { // Paper - check actual list size
             Thread.sleep(10L);
         }
 
