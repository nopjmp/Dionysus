From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>
Date: Sat, 6 Aug 2022 21:53:35 +0200
Subject: [PATCH] Migrate stats to long and improve stats map performance


diff --git a/src/main/java/net/minecraft/server/ServerStatisticManager.java b/src/main/java/net/minecraft/server/ServerStatisticManager.java
index e3d2c0ff737bce159fb3b81e466a76e2a929c009..1ba3fb4a1979f7466ff250c4c2ddd734e3e357f9 100644
--- a/src/main/java/net/minecraft/server/ServerStatisticManager.java
+++ b/src/main/java/net/minecraft/server/ServerStatisticManager.java
@@ -64,7 +64,7 @@ public class ServerStatisticManager extends StatisticManager {
 
     }
 
-    public void setStatistic(EntityHuman entityhuman, Statistic statistic, int i) {
+    public void setStatistic(EntityHuman entityhuman, Statistic statistic, long i) {
         if ( org.spigotmc.SpigotConfig.disableStatSaving ) return; // Spigot
         super.setStatistic(entityhuman, statistic, i);
         this.e.add(statistic);
@@ -96,12 +96,12 @@ public class ServerStatisticManager extends StatisticManager {
                     StatisticWrapper statisticwrapper = new StatisticWrapper();
 
                     if (((JsonElement) entry.getValue()).isJsonPrimitive() && ((JsonElement) entry.getValue()).getAsJsonPrimitive().isNumber()) {
-                        statisticwrapper.a(((JsonElement) entry.getValue()).getAsInt());
+                        statisticwrapper.a(((JsonElement) entry.getValue()).getAsLong()); // Dionysus - migrate stats to long
                     } else if (((JsonElement) entry.getValue()).isJsonObject()) {
                         JsonObject jsonobject1 = ((JsonElement) entry.getValue()).getAsJsonObject();
 
                         if (jsonobject1.has("value") && jsonobject1.get("value").isJsonPrimitive() && jsonobject1.get("value").getAsJsonPrimitive().isNumber()) {
-                            statisticwrapper.a(jsonobject1.getAsJsonPrimitive("value").getAsInt());
+                            statisticwrapper.a(jsonobject1.getAsJsonPrimitive("value").getAsLong()); // Dionysus - migrate stats to long
                         }
 
                         if (jsonobject1.has("progress") && statistic.g() != null) {
@@ -145,7 +145,7 @@ public class ServerStatisticManager extends StatisticManager {
             if (((StatisticWrapper) entry.getValue()).b() != null) {
                 JsonObject jsonobject1 = new JsonObject();
 
-                jsonobject1.addProperty("value", Integer.valueOf(((StatisticWrapper) entry.getValue()).a()));
+                jsonobject1.addProperty("value", ((StatisticWrapper) entry.getValue()).a()); // Dionysus - migrate stats to long
 
                 try {
                     jsonobject1.add("progress", ((StatisticWrapper) entry.getValue()).b().a());
@@ -155,7 +155,7 @@ public class ServerStatisticManager extends StatisticManager {
 
                 jsonobject.add(((Statistic) entry.getKey()).name, jsonobject1);
             } else {
-                jsonobject.addProperty(((Statistic) entry.getKey()).name, Integer.valueOf(((StatisticWrapper) entry.getValue()).a()));
+                jsonobject.addProperty(((Statistic) entry.getKey()).name, ((StatisticWrapper) entry.getValue()).a()); // Dionysus - migrate stats to long
             }
         }
 
@@ -177,7 +177,7 @@ public class ServerStatisticManager extends StatisticManager {
             while (iterator.hasNext()) {
                 Statistic statistic = (Statistic) iterator.next();
 
-                hashmap.put(statistic, Integer.valueOf(this.getStatisticValue(statistic)));
+                hashmap.put(statistic, this.getStatisticValue(statistic)); // Dionysus - migrate stats to long
             }
         }
 
diff --git a/src/main/java/net/minecraft/server/StatisticManager.java b/src/main/java/net/minecraft/server/StatisticManager.java
index e3f38a3c6ba95cc4347eae450aad0546bc3bc7bb..43a4bf7e47ab90a34c6d83fe4ee2395bfe8704c2 100644
--- a/src/main/java/net/minecraft/server/StatisticManager.java
+++ b/src/main/java/net/minecraft/server/StatisticManager.java
@@ -5,21 +5,21 @@ import java.util.Map;
 
 public class StatisticManager {
 
-    protected final Map<Statistic, StatisticWrapper> a = Maps.newConcurrentMap();
+    protected final Map<Statistic, StatisticWrapper> a = new org.jctools.maps.NonBlockingHashMap<>(); // Dionysus - improve stats speeds
 
     public StatisticManager() {}
 
     public void b(EntityHuman entityhuman, Statistic statistic, int i) {
         // CraftBukkit start - fire Statistic events
-        org.bukkit.event.Cancellable cancellable = org.bukkit.craftbukkit.event.CraftEventFactory.handleStatisticsIncrease(entityhuman, statistic, this.getStatisticValue(statistic), i);
+        org.bukkit.event.Cancellable cancellable = org.bukkit.craftbukkit.event.CraftEventFactory.handleStatisticsIncrease(entityhuman, statistic, (int) this.getStatisticValueLong(statistic), i); // Dionysus - migrate stats to long
         if (cancellable != null && cancellable.isCancelled()) {
             return;
         }
         // CraftBukkit end
-        this.setStatistic(entityhuman, statistic, this.getStatisticValue(statistic) + i);
+        this.setStatistic(entityhuman, statistic, this.getStatisticValueLong(statistic) + i); // Dionysus - migrate stats to long
     }
 
-    public void setStatistic(EntityHuman entityhuman, Statistic statistic, int i) {
+    public void setStatistic(EntityHuman entityhuman, Statistic statistic, long i) { // Dionysus - migrate stats to long
         StatisticWrapper statisticwrapper = (StatisticWrapper) this.a.get(statistic);
 
         if (statisticwrapper == null) {
@@ -30,9 +30,15 @@ public class StatisticManager {
         statisticwrapper.a(i);
     }
 
-    public int getStatisticValue(Statistic statistic) {
+    public long getStatisticValueLong(Statistic statistic) { // Dionysus - migrate stats to long
         StatisticWrapper statisticwrapper = (StatisticWrapper) this.a.get(statistic);
 
         return statisticwrapper == null ? 0 : statisticwrapper.a();
     }
+
+    // Dionysus start - migrate stats to long
+    public int getStatisticValue(Statistic statistic) {
+        return (int) getStatisticValueLong(statistic);
+    }
+    // Dionysus end
 }
diff --git a/src/main/java/net/minecraft/server/StatisticWrapper.java b/src/main/java/net/minecraft/server/StatisticWrapper.java
index 63fbf9447e1b7250613ee39e72c3d7fae35f3081..9842c8375deb6222e19fc650d4e4dbc0cf45136a 100644
--- a/src/main/java/net/minecraft/server/StatisticWrapper.java
+++ b/src/main/java/net/minecraft/server/StatisticWrapper.java
@@ -2,20 +2,20 @@ package net.minecraft.server;
 
 public class StatisticWrapper {
 
-    private int a;
+    private long a; // Dionysus - migrate stats to long
     private IJsonStatistic b;
 
     public StatisticWrapper() {}
 
-    public int a() {
+    public long a() { // Dionysus - migrate stats to long
         return this.a;
     }
 
-    public void a(int i) {
+    public void a(long i) { // Dionysus - migrate stats to long
         this.a = i;
     }
 
-    public <T extends IJsonStatistic> T b() {
+    public IJsonStatistic b() { // Dionysus - migrate stats to long
         return this.b;
     }
 
