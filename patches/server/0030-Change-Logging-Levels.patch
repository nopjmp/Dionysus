From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Fri, 5 Mar 2021 19:27:36 -0600
Subject: [PATCH] Change Logging Levels

Currently just just changes the logging levels for PlayerConnection, but anything that is spamming we will move them to trace and you can configure Log4J manually to bring them back per class.

I can provide examples if needed.

diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index ed04602163ba61e94a15d6538e4bc68105cc0c37..feee12cc3fb9c40c8e086f48019d49beb47aeebc 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -357,7 +357,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                 if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(entity.getName()))) { // Spigot
                 // CraftBukkit end
-                    PlayerConnection.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
+                    PlayerConnection.LOGGER.trace("{} (vehicle of {}) moved too quickly! {},{},{}", entity.getName(), this.player.getName(), Double.valueOf(d6), Double.valueOf(d7), Double.valueOf(d8));
                     this.networkManager.sendPacket(new PacketPlayOutVehicleMove(entity));
                     return;
                 }
@@ -382,7 +382,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                 if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                     flag1 = true;
-                    PlayerConnection.LOGGER.warn(entity.getName() + " (vehicle of " + this.player.getName() + ") moved wrongly!"); // Paper - More informative
+                    PlayerConnection.LOGGER.trace(entity.getName() + " (vehicle of " + this.player.getName() + ") moved wrongly!"); // Paper - More informative
                 }
                 Location curPos = this.getPlayer().getLocation(); // Spigot
 
@@ -605,7 +605,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                                 if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && (!this.minecraftServer.R() || !this.minecraftServer.Q().equals(this.player.getName()))) { // Spigot
                                 // CraftBukkit end
-                                    PlayerConnection.LOGGER.warn("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
+                                    PlayerConnection.LOGGER.trace("{} moved too quickly! {},{},{}", this.player.getName(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9));
                                     this.a(this.player.locX, this.player.locY, this.player.locZ, this.player.yaw, this.player.pitch);
                                     return;
                                 }
@@ -663,7 +663,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                             if (!this.player.L() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.playerInteractManager.isCreative() && this.player.playerInteractManager.getGameMode() != EnumGamemode.SPECTATOR) { // Spigot
                                 flag1 = true;
-                                PlayerConnection.LOGGER.warn("{} moved wrongly!", this.player.getName());
+                                PlayerConnection.LOGGER.trace("{} moved wrongly!", this.player.getName());
                             }
 
                             this.player.setLocation(d4, d5, d6, f, f1);
@@ -1307,7 +1307,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     this.minecraftServer.server.playerCommandState = false;
                 }
             } else if (s.isEmpty()) {
-                LOGGER.warn(this.player.getName() + " tried to send an empty message");
+                LOGGER.trace(this.player.getName() + " tried to send an empty message");
             } else if (getPlayer().isConversing()) {
                 // Spigot start
                 final String message = s;
